<UserControl x:Class="AnnotationTool.View.View2D"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:AnnotationTool.ViewModel"
             xmlns:view="clr-namespace:AnnotationTool.View"
             xmlns:converters="clr-namespace:AnnotationTool.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             x:Name="view2d"
             d:DesignHeight="450" d:DesignWidth="800">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding View2DLoaded}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <UserControl.DataContext>
        <vm:ViewModel2D/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
        <converters:MarkingTypeConverter x:Key="MarkingTypeConverter"/>
        <converters:MarkingTypeNameConverter x:Key="MarkingTypeNameConverter"/>
        <converters:ButtonBackgroundConverter x:Key="ButtonBackgroundConverter"/>
        <converters:FilenameConverter x:Key="FilenameConverter"/>
        <converters:ImageWidthConverter x:Key="ImageWidthConverter"/>
        <converters:IndexConverter x:Key="IndexConverter"/>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="transparent"/>
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource ButtonBackgroundConverter}">
                        <Binding ElementName="view2d" Path="DataContext.SelectedLeftImage"/>
                        <Binding Path=""/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="DeleteButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Content" Value="Üzenet törlése"/>
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13">
                                    <Ellipse x:Name="Ellipse_Border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                                    <Ellipse Margin="4" x:Name="CheckMark" Fill="{DynamicResource GlyphBrush}"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" Value="Black" TargetName="Ellipse_Border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Ellipse_Border"/>
                                <Setter Property="Stroke" Value="Black" TargetName="Ellipse_Border"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Ellipse_Border"/>
                                <Setter Property="Stroke" Value="transparent" TargetName="Ellipse_Border"/>
                                <Setter Property="Foreground" Value="transparent"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Style.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="10,5,10,5"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Width" Value="30"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="SettingsButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="1, 0, 1, 10"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Command="{Binding KeyCommand}" Key="D1" CommandParameter="{StaticResource One}"/>
        <KeyBinding Command="{Binding KeyCommand}" Key="D2" CommandParameter="{StaticResource Two}"/>
        <KeyBinding Command="{Binding KeyCommand}" Key="D3" CommandParameter="{StaticResource Three}"/>
        <KeyBinding Command="{Binding CTRLRCommand}" Key="R" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding DecreaseIndexCommand}" Key="Left"/>
        <KeyBinding Command="{Binding IncreaseIndexCommand}" Key="Right"/>
    </UserControl.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Row="0" Grid.Column="0" Style="{StaticResource StackPanelStyle}">
                <Label FontSize="20" Foreground="Yellow" VerticalAlignment="Center" Content="{Binding Delta, IsAsync=False}"/>
                <Button Focusable="False" Command="{Binding DecreaseDeltaCommand}">
                    <Path Fill="Black" Data="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
                </Button>
                <Button Focusable="False" Command="{Binding IncreaseDeltaCommand}">
                    <Path Fill="Black" Data="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.Column="1" Style="{StaticResource StackPanelStyle}">
                <Label FontSize="20" Foreground="Yellow" VerticalAlignment="Center" Content="{Binding Index, Converter={StaticResource IndexConverter}, IsAsync=False}"/>
                <Button Focusable="False" Command="{Binding DecreaseIndexCommand}">
                    <Path Fill="Black" Data="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
                </Button>
                <Button Focusable="False" Command="{Binding IncreaseIndexCommand}">
                    <Path Fill="Black" Data="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
                </Button>
            </StackPanel>
            <view:ViewPort Grid.Row="0" Grid.ColumnSpan="2" Delta="{Binding ElementName=view2d, Path=DataContext.Delta, IsAsync=False}" Camera="{Binding ElementName=view2d, Path=DataContext.Camera, IsAsync=False}" MarkingType="{Binding ElementName=view2d, Path=DataContext.MarkingType, IsAsync=False}" Lines="{Binding ElementName=view2d, Path=DataContext.LeftLines, IsAsync=False}" SelectedUnprunedImage="{Binding ElementName=view2d, Path=DataContext.SelectedLeftImage, IsAsync=False}" SelectedLine="{Binding ElementName=view2d, Path=DataContext.SelectedLine, IsAsync=False}" IsEnabled="{Binding ElementName=view2d, Path=DataContext.IsAnnotationEnabled, IsAsync=True}"/>
            <view:ViewPort Grid.Row="1" Grid.ColumnSpan="2" Delta="{Binding ElementName=view2d, Path=DataContext.Delta, IsAsync=False}" Camera="{Binding ElementName=view2d, Path=DataContext.Camera, IsAsync=False}" MarkingType="{Binding ElementName=view2d, Path=DataContext.MarkingType, IsAsync=False}" Lines="{Binding ElementName=view2d, Path=DataContext.RightLines, IsAsync=False}" SelectedUnprunedImage="{Binding ElementName=view2d, Path=DataContext.SelectedRightImage, IsAsync=False}" SelectedLine="{Binding ElementName=view2d, Path=DataContext.SelectedLine, IsAsync=False}" IsEnabled="{Binding ElementName=view2d, Path=DataContext.IsAnnotationEnabled, IsAsync=True}"/>

        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="3.2*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="1.1*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>


            <TabControl SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay, IsAsync=False}" Grid.Row="0" Margin="10, 0, 10, 10">
                <TabItem Header="Bal oldal">
                    <view:DataGrid Selected2dLine="{Binding ElementName=view2d,Path=DataContext.Selected2dLine, IsAsync=False}" _2DLineList="{Binding ElementName=view2d, Path=DataContext._2DLeftLineList, IsAsync=False}"/>
                </TabItem>
                <TabItem Header="Jobb oldal">
                    <view:DataGrid Selected2dLine="{Binding ElementName=view2d,Path=DataContext.Selected2dLine, IsAsync=False}" _2DLineList="{Binding ElementName=view2d, Path=DataContext._2DRightLineList, IsAsync=False}"/>
                </TabItem>
            </TabControl>

            <Grid Grid.Row="1" Margin="10, 0, 10, 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>


                <Button Grid.Column="0" Style="{StaticResource SettingsButtonStyle}" Command="{Binding ShowFilesCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Path VerticalAlignment="Center" Fill="Black" Data="M1 3.5A1.5 1.5 0 0 1 2.5 2h2.764c.958 0 1.76.56 2.311 1.184C7.985 3.648 8.48 4 9 4h4.5A1.5 1.5 0 0 1 15 5.5v.64c.57.265.94.876.856 1.546l-.64 5.124A2.5 2.5 0 0 1 12.733 15H3.266a2.5 2.5 0 0 1-2.481-2.19l-.64-5.124A1.5 1.5 0 0 1 1 6.14V3.5zM2 6h12v-.5a.5.5 0 0 0-.5-.5H9c-.964 0-1.71-.629-2.174-1.154C6.374 3.334 5.82 3 5.264 3H2.5a.5.5 0 0 0-.5.5V6zm-.367 1a.5.5 0 0 0-.496.562l.64 5.124A1.5 1.5 0 0 0 3.266 14h9.468a1.5 1.5 0 0 0 1.489-1.314l.64-5.124A.5.5 0 0 0 14.367 7H1.633z"/>
                        <Label Content="Fájlok helyének megnyitása"/>
                    </StackPanel>
                </Button>
                <Button Grid.Column="1" Style="{StaticResource SettingsButtonStyle}" Command="{Binding View2DLoaded}">
                    <StackPanel Orientation="Horizontal">
                        <Path VerticalAlignment="Center" Fill="Black" Data="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
                        <Label Content="Képek helyének megváltoztatása"/>
                    </StackPanel>
                </Button>
            </Grid>

            <ListBox Grid.Row="2" Margin="10, 0, 10, 10" BorderThickness="0" SelectedItem="{Binding MarkingType, Mode=TwoWay, IsAsync=False}" ItemsSource="{Binding MarkingTypes, IsAsync=False}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Focusable="False" GroupName="RB" Background="{Binding Converter={StaticResource MarkingTypeConverter}, IsAsync=False}" Content="{Binding Converter={StaticResource MarkingTypeNameConverter}, IsAsync=False}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}, IsAsync=False}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Row="3" Margin="10, 0, 5, 10">
                <ItemsControl x:Name="itemscontrol" ItemsSource="{Binding ImageGroup, IsAsync=False}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button HorizontalAlignment="Stretch" Width="{Binding ElementName=itemscontrol, Path=ActualWidth, Converter={StaticResource ImageWidthConverter}}" VerticalContentAlignment="Stretch" Style="{StaticResource ButtonStyle}" Margin="0,2,2,0" Command="{Binding Path=DataContext.SelectImageCommand, ElementName=view2d}" CommandParameter="{Binding}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="4*"/>
                                        <RowDefinition Height="*" MinHeight="25"/>
                                    </Grid.RowDefinitions>
                                    <Image Grid.Row="0" x:Name="Image">
                                        <Image.Source>
                                            <BitmapImage UriSource="{Binding IsAsync=False}" DecodePixelWidth="200"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Converter={StaticResource FilenameConverter}, IsAsync=False}"/>
                                </Grid>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                            <!--<VirtualizingStackPanel Orientation="Horizontal" IsVirtualizing="True" IsContainerVirtualizable="True" VirtualizationMode="Recycling"/>-->
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <ScrollViewer CanContentScroll="True" Focusable="False" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                </ItemsControl>
            </Grid>

            <Grid Grid.Row="4" Margin="10, 0, 10, 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button Style="{StaticResource SettingsButtonStyle}" Grid.Column="0" Command="{Binding PreviousImageGroupCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Előző "/>
                        <TextBlock Text="{Binding ImageGroupSize, IsAsync=False}"/>
                    </StackPanel>
                </Button>
                <Button Style="{StaticResource SettingsButtonStyle}" Grid.Column="1" Command="{Binding NextImageGroupCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Következő "/>
                        <TextBlock Text="{Binding ImageGroupSize, IsAsync=False}"/>
                    </StackPanel>
                </Button>
            </Grid>

            <Expander Focusable="False" Grid.Row="5" Cursor="Hand" ExpandDirection="Up" Visibility="{Binding ErrorMessages.Count, Converter={StaticResource IntToVisibilityConverter}, IsAsync=False}">
                <Expander.Header>
                    <TextBlock Text="{Binding ErrorMessages.Count, StringFormat='Hibaüzenetek: ({0})', IsAsync=False}"/>
                </Expander.Header>
                <ListBox ItemsSource="{Binding ErrorMessages, IsAsync=False}" MaxHeight="100" HorizontalContentAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{Binding IsAsync=False}"/>
                                <Button Focusable="False" Grid.Column="1" Style="{StaticResource DeleteButtonStyle}" Command="{Binding ElementName=view2d, Path=DataContext.DeleteErrorMessageCommand}" CommandParameter="{Binding}"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Focusable" Value="False"/>
                            <!--<Setter Property="IsHitTestVisible" Value="False" />-->
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Expander>

        </Grid>
    </Grid>
</UserControl>
