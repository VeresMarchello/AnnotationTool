<UserControl x:Class="AnnotationTool.View.View2D"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:AnnotationTool.ViewModel"
             xmlns:view="clr-namespace:AnnotationTool.View"
             xmlns:converters="clr-namespace:AnnotationTool.Converters"
             xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ie="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <vm:ViewModel2D/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:Vector3Converter x:Key="Vector3Converter"/>
        <converters:OpacityConverter x:Key="OpacityConverter"/>

        <sys:Int32 x:Key="Zero">0</sys:Int32>
        <sys:Int32 x:Key="One">1</sys:Int32>
        <sys:Int32 x:Key="Two">2</sys:Int32>
        <sys:Int32 x:Key="Three">3</sys:Int32>

    </UserControl.Resources>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>


        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <view:ProgressBar Grid.RowSpan="2" Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <hx:Viewport3DX
                Grid.Row="0"
                x:Name="view"
                Camera="{Binding Camera}"
                TextBrush="Purple"
                ShowViewCube="False"
                ShowCameraInfo="False"
                UseDefaultGestures="False"
                EffectsManager="{Binding EffectsManager}">

                <hx:Viewport3DX.InputBindings>
                    <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Key="E" Modifiers="Ctrl" />
                    <MouseBinding Command="{Binding LeftClickCommand}" CommandParameter="{Binding ElementName=view}" Gesture="LeftClick"/>
                    <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="RightClick"/>
                    <MouseBinding Command="{Binding CTRLLeftClickCommand}" CommandParameter="{Binding ElementName=view}" Gesture="CTRL+LeftClick"/>
                    <MouseBinding Command="{Binding CTRLRigtClickCommand}" CommandParameter="{Binding ElementName=view}" Gesture="CTRL+RightClick"/>
                    <MouseBinding Command="{Binding CTRLLeftDoubleClickCommand}" CommandParameter="{Binding ElementName=view}" Gesture="CTRL+LeftDoubleClick"/>
                    <MouseBinding Command="{Binding MiddleClickCommand}" Gesture="MiddleClick"/>
                </hx:Viewport3DX.InputBindings>

                <i:Interaction.Triggers>
                    <!--<i:EventTrigger EventName="MouseDown3D">
                        <ie:CallMethodAction MethodName="MouseDown3DHandler" TargetObject="{Binding}"/>
                    </i:EventTrigger>-->
                    <i:EventTrigger EventName="MouseUp3D">
                        <ie:CallMethodAction MethodName="MouseUp3DHandler" TargetObject="{Binding}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove3D">
                        <ie:CallMethodAction MethodName="MouseMove3DHandler" TargetObject="{Binding}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <hx:AmbientLight3D Color="{Binding AmbientLightColor}"/>
                <hx:DirectionalLight3D Direction="{Binding DirectionalLightDirection}" Color="{Binding DirectionalLightColor}" />
                <hx:MeshGeometryModel3D 
                    x:Name="plane"
                    Geometry="{Binding Plane}"
                    Transform="{Binding PlaneTransform}" >
                    <hx:MeshGeometryModel3D.Material>
                        <hx:PhongMaterial DiffuseColor="White" AmbientColor="black" ReflectiveColor="Black" EmissiveColor="Black" SpecularColor="Black" DiffuseMap="{Binding Picture}"/>
                    </hx:MeshGeometryModel3D.Material>
                </hx:MeshGeometryModel3D>
                <!--Material="{Binding PlaneMaterial}"-->
                <hx:LineGeometryModel3D Geometry="{Binding Lines}" Thickness="3" Color="Purple"/>
                <hx:LineGeometryModel3D Geometry="{Binding NewLine}" Thickness="3" Color="Red"/>
                <!--<hx:TransformManipulator3D
                x:Name="manipulator"
                CenterOffset="{Binding CenterOffset}"
                SizeScale="1"
                Target="{Binding Target}" />-->
            </hx:Viewport3DX>
            <StatusBar Grid.Row="1" VerticalAlignment="Bottom">
                <StatusBar.Background>
                    <SolidColorBrush Opacity="0.5" Color="WhiteSmoke" />
                </StatusBar.Background>
                <StatusBarItem>
                    <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Text="{Binding ElementName=view, Path=FrameRate, StringFormat=FrameRate: \{0:0.00\} FPS}" />
                </StatusBarItem>
                <Separator />
                <StatusBarItem>
                    <TextBlock Text="{Binding Camera.Position, StringFormat=Position: \{0:0.0\}}" />
                </StatusBarItem>
                <Separator />
                <StatusBarItem>
                    <TextBlock Text="{Binding Camera.LookDirection, StringFormat=LookDirection: \{0:0.0\}}" />
                </StatusBarItem>
                <Separator />
                <StatusBarItem>
                    <TextBlock Text="{Binding SelectedImage, StringFormat=Image: {0}}" />
                </StatusBarItem>
                <Separator />
                <StatusBarItem>
                    <TextBlock Text="{Binding Lines.Lines.Count, StringFormat=Number of Lines: {0}}" />
                </StatusBarItem>
            </StatusBar>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="200" />
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            
            <DataGrid x:Name="dataGrid" Grid.Row="0" SelectedItem="{Binding SelectedLine, Mode=TwoWay}" ItemsSource="{Binding Lines.Lines}" Margin="10" IsReadOnly="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <ie:CallMethodAction MethodName="SelectionChangedHandler" TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="X1" Binding="{Binding Converter={StaticResource Vector3Converter}, ConverterParameter={StaticResource Zero}}" Width="1*"/>
                    <DataGridTextColumn Header="Y1" Binding="{Binding Converter={StaticResource Vector3Converter}, ConverterParameter={StaticResource One}}" Width="1*"/>
                    <DataGridTextColumn Header="X2" Binding="{Binding Converter={StaticResource Vector3Converter}, ConverterParameter={StaticResource Two}}" Width="1*"/>
                    <DataGridTextColumn Header="Y2" Binding="{Binding Converter={StaticResource Vector3Converter}, ConverterParameter={StaticResource Three}}" Width="1*"/>
                </DataGrid.Columns>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Purple"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.RowStyle >
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>

            <Grid Grid.Row="1" Margin="10, 10, 5, 10">
                <ScrollViewer x:Name="scrollViewer">
                    <ItemsControl ItemsSource="{Binding Images}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Margin="0,2,2,0" Command="{Binding Path=DataContext.SelectImageCommand, ElementName=scrollViewer}" CommandParameter="{Binding}">
                                    <Image x:Name="Image" Source="{Binding}">
                                        <!--<Image.Opacity>
                                            <MultiBinding Converter="{StaticResource OpacityConverter}">
                                                <Binding RelativeSource="{RelativeSource Self}" Path="Source"/>
                                                <Binding Path="DataContext.SelectedImage"/>
                                            </MultiBinding>
                                        </Image.Opacity>-->
                                    </Image>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="2" Rows="6"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
