<UserControl x:Class="AnnotationTool.View.View2D"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:AnnotationTool.ViewModel"
             xmlns:view="clr-namespace:AnnotationTool.View"
             xmlns:converters="clr-namespace:AnnotationTool.Converters"
             xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ie="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d" 
             x:Name="view2d"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <vm:ViewModel2D/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:Vector3Converter x:Key="Vector3Converter"/>
        <converters:MarkingTypeConverter x:Key="MarkingTypeConverter"/>
        <converters:HeightConverter x:Key="HeightConverter"/>

        <Style TargetType="{x:Type ListBoxItem}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="{x:Type view:ViewPort}">
            <Setter Property="Camera" Value="{Binding ElementName=view2d, Path=DataContext.Camera}"/>
        </Style>-->
        
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Command="{Binding KeyCommand}" Key="D1" CommandParameter="{StaticResource One}"/>
        <KeyBinding Command="{Binding KeyCommand}" Key="D2" CommandParameter="{StaticResource Two}"/>
        <KeyBinding Command="{Binding KeyCommand}" Key="D3" CommandParameter="{StaticResource Three}"/>
        <KeyBinding Command="{Binding CTRLRCommand}" Key="R" Modifiers="Ctrl"/>
    </UserControl.InputBindings>

    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <view:ViewPort Grid.Row="0" Camera="{Binding ElementName=view2d, Path=DataContext.Camera}" Lines="{Binding ElementName=view2d, Path=DataContext.LeftLines}" SelectedUnprunedImage="{Binding ElementName=view2d, Path=DataContext.SelectedLeftImage}"/>
            <view:ViewPort Grid.Row="1" Camera="{Binding ElementName=view2d, Path=DataContext.Camera}" Lines="{Binding ElementName=view2d, Path=DataContext.LeftLines}" SelectedUnprunedImage="{Binding ElementName=view2d, Path=DataContext.SelectedRightImage}"/>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto"/>
                <RowDefinition Height="200"/>
            </Grid.RowDefinitions>


            <DataGrid x:Name="dataGrid" Grid.Row="0" AutoGenerateColumns="False" SelectedItem="{Binding Selected2dLine, Mode=TwoWay}" ItemsSource="{Binding _2DLineList}" Margin="10" IsReadOnly="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <ie:CallMethodAction MethodName="SelectionChangedHandler" TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="2*"/>
                    <DataGridTextColumn Header="First Point" Binding="{Binding FirstPoint}" Width="1*"/>
                    <DataGridTextColumn Header="Center Point" Binding="{Binding CenterPoint}" Width="1*"/>
                    <DataGridTextColumn Header="Mirrored Point" Binding="{Binding MirroredPoint}" Width="1*"/>
                </DataGrid.Columns>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{Binding Path=Type, Converter={StaticResource MarkingTypeConverter}}"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.RowStyle >
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="{Binding Path=Type, Converter={StaticResource MarkingTypeConverter}}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>

            <ListBox Grid.Row="1" Margin="10, 0, 10, 10" BorderThickness="0" SelectedItem="{Binding MarkingType, Mode=TwoWay}" ItemsSource="{Binding MarkingTypes}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <RadioButton GroupName="RB" Background="{Binding Converter={StaticResource MarkingTypeConverter}}" Content="{Binding}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Row="2" Margin="10, 0, 5, 10">
                <ScrollViewer x:Name="scrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Images}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Margin="0,2,2,0" Command="{Binding Path=DataContext.SelectImageCommand, ElementName=scrollViewer}" CommandParameter="{Binding}">
                                    <Image x:Name="Image" Source="{Binding}"/>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
